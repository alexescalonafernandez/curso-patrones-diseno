@startuml

skinparam backgroundcolor transparent
skinparam classFontSize 18
skinparam noteFontSize 18
skinparam arrowFontSize 18
skinparam classAttributeFontSize 18

skinparam titleFontColor #5cb85c

Title Interpreter Pattern Example

abstract class AbstractExpression{
    + void interpret(Context context)
    + {abstract} String one()
    + {abstract} String four()
    + {abstract} String five()
    + {abstract} String nine()
    + {abstract} int multiplier()
}

class Context{
    - String roman
    - int value
    + String getRoman()
    + void setRoman(String roman)
    + int getValue()
    + void setValue(int value)
}

AbstractExpression o-- Context

class Thousand extends AbstractExpression
class Hundred extends AbstractExpression
class Ten extends AbstractExpression
class One extends AbstractExpression

class Interpreter{
    - Context context
    - List<AbstractExpression> evaluator
    + Interpreter()
    + int roman2decimal(String roman)
}

Interpreter --> Context: create

note right of Interpreter::Interpreter
    context = new Context();
    evaluator = new ArrayList<AbstractExpression>();
    evaluator.add(new ThousandExpression());
    evaluator.add(new HundredExpression());
    evaluator.add(new TenExpression());
    evaluator.add(new OneExpression());
end note

note right of Interpreter::roman2decimal
    context.setRoman(roman);
    context.setValue(0);
    for(AbstractExpression e : evaluator)
        e.interpret(context);
    return context.getValue();
end note

@enduml